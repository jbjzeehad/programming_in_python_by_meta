 >> Declare functions in python 
    Pass data in functions
    Return data from functions

def sum(x,y):
    return x+y

A function is a modular piece of code that can be used repeatedly.

>> Built in Scope
        Global Scope
            Enclosing Scope
                Local Scope

Enclosed variables can be accessed locally.

>> Function and variable scope : It is essential to understand the levels of scope in Python and how things can be accessed from the four different scope levels
    1. Local Scope : Local scope refers to a variable declared inside a function.

def get_total(a, b):
    #local variable declared inside a function
    total = a + b;
    return total

print(get_total(5, 2))
7

# Accessing variable outside of the function:
print(total)
NameError: name 'total' is not defined

    2. Enclosing scope : Enclosing scope refers to a function inside another function or what is commonly called a nested function.

def get_total(a, b):
    #enclosed variable declared inside a function
    total = a + b

    def double_it():
        #local variable
        double = total * 2
        print(double)

    double_it()
    #double variable will not be accessible
    print(double)

    return total

    3. Global scope : Global scope is when a variable is declared outside of a function. This means it can be accessed from anywhere.


special = 5

def get_total(a, b):
    #enclosed scope variable declared inside a function
    total = a + b
    print(special)

    def double_it():
        #local variable
        double = total * 2
        print(special)

    double_it()

    return total

    4. Built in scope : Built-in scope refers to the reserved keywords that Python uses for its built-in functions, such as print, def, for, in, and so forth.  Functions with built-in scope can be accessed at any level.

>> Data Structures : 
    1. Built in: List, tuple, Dictionary, set
    2. User defined: Stack, Tree, Queue, Graph, Linked List, HashMap

A data structure allows you to organize and arrange your data to perform operations on them. Python has the following built-in data structures: List, dictionary, tuple and set. These are all considered non-primitive data structures, meaning they are classed as objects.Along with the built-in data structures, Python allows users to create their own. Data structures such as Stacks, Queues and Trees can all be created by the user.
Each data structure can be designed to solve a particular problem or optimize a current solution to make it much more performant

>> Mutability and Immutability : 

Data Structures can be mutable or immutable.Mutability refers to data inside the data structure that can be modified. means we an either change, update, or delete the data when needed. exm: List

The opposite of mutable is immutable. An immutable data structure will not allow modification once the data has been set. exm: Tuple